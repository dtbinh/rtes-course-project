# Write The Main Code Name Here Without Any Extensions

# Compiler 
CC = gcc

# Compiler flags
CFLAGS= -Wall

# Linking flags
LDFLAGS= -pthread

# Executable name
EXECNAME= main

# The output path of the binary file generated
OUTPUT_PATH = ../bin/

# The Input Path for Header Files and Objects
INPUT_PATH = ./

# Specify Headers : The ".h" Files for your Library 
HEADERS = $(INPUT_PATH)../include/structures.h \
		 
# Specify Objects : The ".o" Files Generated by Compiling the ".c" Files
OBJECTS = $(INPUT_PATH)specs_parsing.o \
	$(INPUT_PATH)event_handling.o \
		  
		  
# Compilation of the Main Code
ifneq ($(MAKECMDGOALS), clean)
$(MAKECMDGOALS) : $(MAKECMDGOALS).o $(OBJECTS)
	$(CC) -o $(OUTPUT_PATH)$(EXECNAME) $(LDFLAGS) $(CFLAGS) $(MAKECMDGOALS).o $(OBJECTS) 

# Main Code Object File
$(MAKECMDGOALS).o : $(MAKECMDGOALS).c $(HEADERS) $(OPENCV_HEADERS)
	$(CC) -c $(MAKECMDGOALS).c $(LDFLAGS) $(CFLAGS)
endif

# Object File for Miscelleneous Functions
$(INPUT_PATH)specs_parsing.o : $(patsubst %.o, %.c, $@) $(INPUT_PATH)../include/structures.h
	$(CC) -c $(patsubst %.o, %.c, $@) -o $@

# Object File for Miscelleneous Functions
$(INPUT_PATH)event_handling.o : $(patsubst %.o, %.c, $@) $(INPUT_PATH)../include/structures.h
	$(CC) -c $(patsubst %.o, %.c, $@) -o $@
	
.PHONY : clean
clean :
	rm -f $(OBJECTS) *.o
	rm -f $(OUTPUT_PATH)$(EXECNAME)
