	RealTime Periodic and Aperiodic Task Simulation
================================================================

This directory contains 4 directories:
1)./include      ---	 This directory contains just a single header file named "structures.h"
			 This file contains all the structures and function declarations used in the project.

2)./bin		 ---	 This directory will contain the binary executable of the project after the 
			 project is compiled properly.

3)./test	 --- 	 This directory contains the test cases file named inputX.txt where X is a number.
			 Along with the trace.dat file which the trace file generated by the trace-cmd when
			 recording the sched_switch events in the project.

4)./source	 ---	 This directory contains the .c file containig the definition of the function.
			 This directory contains 5 files:
			 a) main.c  ---  This file contains the main function from where the code starts.
					 It contains the initialization of the various locks and parameters and creates the task threads.
			 b) event_handling.c --- This file contains the function related to the handling of the key press event and
						 opening of the keyboard device file.
			 c) specs_parsing.c  --- This file contains the function related to the parsing of the input file.
			 d) task_functions.c --- This file contains the periodic and event task function.
			 e) Makefile	     --- This file is used to compile the project and generate the binary exeutable.


	Compilation
==================================
To compile the project go the source directory and execute this command:

$bash:~  make main
This command will compile and generate the excutable in the ./bin folder with name main.


	Execution
=================================
To execute the project go the bin directory or use the fullpath :

if in ./bin folder:
$bash:~	 sudo ./main <input_filename>

if in ./source folder:
$bash:~  sudo ../bin/main <input_filename>

<input_filename> should be the name of the input file containing the task specification.
<input_filaneme> should be present in the ./test folder.
<input_filaneme> should not contain the path since it is automatically added to it in the program.


	Tracing 
=================================
To execute the trace command:

$bash:~ sudo trace-cmd record -e sched_switch ./main <input_filaname>

This command will create the trace.dat file in the ./source directory.
We can use kernelshare to view the trace.dat file in the GUI.

	Cleaning
================================
To clean the project directory go to the ./source directory and execute this command:

$bash:~ make clean



						 						
